import re

def assess_password_strength(password):
    # Define strength criteria
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    digit_criteria = bool(re.search(r'[0-9]', password))
    special_char_criteria = bool(re.search(r'[@$!%*?&#]', password))
    
    # Calculate the strength score
    strength_score = sum([length_criteria, uppercase_criteria, lowercase_criteria, digit_criteria, special_char_criteria])
    
    # Determine strength level and feedback
    if strength_score == 5:
        strength = "Strong"
        feedback = "Your password is strong! Well done."
    elif strength_score >= 3:
        strength = "Moderate"
        feedback = "Your password is decent, but could be stronger. Consider adding more special characters, numbers, and varying case."
    else:
        strength = "Weak"
        feedback = "Your password is weak. Consider increasing the length and adding numbers, special characters, and uppercase letters."
    
    return strength, feedback

# User input
password = input("Please enter your password: ")

# Assess strength
strength, feedback = assess_password_strength(password)

# Output the results
print(f"Password strength: {strength}")
print(feedback)
